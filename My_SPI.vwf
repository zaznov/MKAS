/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CHIP_SELECT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("MOSI")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("miso")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ready_new_data_to_miso")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ERROR_COUNT_reg_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ERROR_COUNT_reg_in[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("ERROR_COUNT_reg_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ERROR_COUNT_reg_in";
}

SIGNAL("spi_control_reg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("spi_control_reg[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

SIGNAL("spi_control_reg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "spi_control_reg";
}

TRANSITION_LIST("CHIP_SELECT")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 693.857;
		LEVEL 0 FOR 1661.878;
		LEVEL 1 FOR 1848.649;
		LEVEL 0 FOR 1634.533;
		LEVEL 1 FOR 990.064;
		LEVEL 0 FOR 1733.65;
		LEVEL 1 FOR 991437.369;
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 1956.66;
		LEVEL 1 FOR 43.34;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 1150.0;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 1450.0;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 9900;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("MOSI")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 723.466;
		LEVEL 1 FOR 172.616;
		LEVEL 0 FOR 1236.07;
		LEVEL 1 FOR 155.456;
		LEVEL 0 FOR 1945.56;
		LEVEL 1 FOR 257.1;
		LEVEL 0 FOR 1025.206;
		LEVEL 1 FOR 279.023;
		LEVEL 0 FOR 994205.503;
	}
}

TRANSITION_LIST("miso")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("ready_new_data_to_miso")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2768.073;
		LEVEL 1 FOR 273.924;
		LEVEL 0 FOR 3151.565;
		LEVEL 1 FOR 165.796;
		LEVEL 0 FOR 993640.642;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5832.362;
		LEVEL 1 FOR 950.671;
		LEVEL 0 FOR 993216.967;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2415.138;
		LEVEL 1 FOR 984.552;
		LEVEL 0 FOR 2432.672;
		LEVEL 1 FOR 950.671;
		LEVEL 0 FOR 993216.967;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2415.138;
		LEVEL 1 FOR 984.552;
		LEVEL 0 FOR 996600.31;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2415.138;
		LEVEL 1 FOR 984.552;
		LEVEL 0 FOR 2432.672;
		LEVEL 1 FOR 950.671;
		LEVEL 0 FOR 993216.967;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5832.362;
		LEVEL 1 FOR 950.671;
		LEVEL 0 FOR 993216.967;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5832.362;
		LEVEL 1 FOR 950.671;
		LEVEL 0 FOR 993216.967;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5832.362;
		LEVEL 1 FOR 950.671;
		LEVEL 0 FOR 993216.967;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2415.138;
		LEVEL 1 FOR 984.552;
		LEVEL 0 FOR 2432.672;
		LEVEL 1 FOR 950.671;
		LEVEL 0 FOR 993216.967;
	}
}

TRANSITION_LIST("ERROR_COUNT_reg_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2415.138;
		LEVEL 1 FOR 984.552;
		LEVEL 0 FOR 2432.672;
		LEVEL 1 FOR 950.671;
		LEVEL 0 FOR 993216.967;
	}
}

TRANSITION_LIST("spi_control_reg[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("spi_control_reg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CHIP_SELECT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MOSI";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "miso";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ready_new_data_to_miso";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ERROR_COUNT_reg_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "spi_control_reg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 22;
}

TIME_BAR
{
	TIME = 21100;
	MASTER = TRUE;
}
;
